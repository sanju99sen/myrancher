#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Sep 17 07:20:37 2021
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1

set ip1 [lindex $argv 0]
set ip2 [lindex $argv 1]
set ip3 [lindex $argv 2]
set ssh_user [lindex $argv 3]
set cni [lindex $argv 4]
set service_cidr [lindex $argv 5]
set pod_cidr [lindex $argv 6]
set cluster_dns_svc_ip [lindex $argv 7]
set cluster_domain [lindex $argv 8]
set kubernetes_img [lindex $argv 9]
set master_node1 [lindex $argv 10]


spawn rke config
match_max 100000
expect -exact "\[+\] Cluster Level SSH Private Key Path \[~/.ssh/id_rsa\]: "
send -- "\r"
expect -exact "\r
\[+\] Number of Hosts \[1\]: "
send -- "1\r"
expect -exact "1\r
\[+\] SSH Address of host (1) \[none\]: "
send -- "$ip1\r"
expect -exact "$ip1\r
\[+\] SSH Port of host (1) \[22\]: "
send -- "\r"
expect -exact "\r
\[+\] SSH Private Key Path of host ($ip1) \[none\]: "
send -- "/root/.ssh/id_rsa"
expect -exact "/root/.ssh/id_rsa"
send -- "\r"
expect -exact "\r
\[+\] SSH User of host ($ip1) \[ubuntu\]: "
send -- "$ssh_user\r"
expect -exact "$ssh_user\r
\[+\] Is host ($ip1) a Control Plane host (y/n)? \[y\]: "
send -- "y\r"
expect -exact "y\r
\[+\] Is host ($ip1) a Worker host (y/n)? \[n\]: "
send -- "y\r"
expect -exact "y\r
\[+\] Is host ($ip1) an etcd host (y/n)? \[n\]: "
send -- "y\r"
expect -exact "y\r
\[+\] Override Hostname of host ($ip1) \[none\]: "
send -- "$master_node1\r"
expect -exact "$master_node1\r
\[+\] Internal IP of host ($ip1) \[none\]: "
send -- "$ip1\r"
expect -exact "$ip1\r
\[+\] Docker socket path on host ($ip1) \[/var/run/docker.sock\]: "
send -- "\r"
expect -exact "\r
\[+\] Network Plugin Type (flannel, calico, weave, canal, aci) \[canal\]: "
send -- "$cni\r"
expect -exact "$cni\r
\[+\] Authentication Strategy \[x509\]: "
send -- "\r"
expect -exact "\r
\[+\] Authorization Mode (rbac, none) \[rbac\]: "
send -- "\r"
expect -exact "\r
\[+\] Kubernetes Docker image \[rancher/hyperkube:v1.20.10-rancher1\]: "
send -- "$kubernetes_img"
expect -exact "$kubernetes_img"
send -- "\r"
expect -exact "\r
\[+\] Cluster domain \[cluster.local\]: "
send -- "$cluster_domain"
expect -exact "$cluster_domain"
send -- "\r"
expect -exact "\r
\[+\] Service Cluster IP Range \[10.43.0.0/16\]: "
send -- "$service_cidr"
expect -exact "$service_cidr"
send -- "\r"
expect -exact "\r
\[+\] Enable PodSecurityPolicy \[n\]: "
send -- "\r"
expect -exact "\r
\[+\] Cluster Network CIDR \[10.42.0.0/16\]: "
send -- "$pod_cidr"
expect -exact "$pod_cidr"
send -- "\r"
expect -exact "\r
\[+\] Cluster DNS Service IP \[10.43.0.10\]: "
send -- "$cluster_dns_svc_ip"
expect -exact "$cluster_dns_svc_ip"
send -- "\r"
expect -exact "\r
\[+\] Add addon manifest URLs or YAML files \[no\]: "
send -- "\r"
expect eof
